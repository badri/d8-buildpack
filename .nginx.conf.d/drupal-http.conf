## Nginx FCGI specific directives.
    fastcgi_buffer_size 32k;
    fastcgi_buffers 64 8k;
    #   - fastcgi_busy_buffers_size >= max(fastcgi_buffer_size, one fastcgi_buffers.size)
    #   - fastcgi_busy_buffers_size =< fastcgi_buffers.size * (fastcgi_buffers.number - 1)
    fastcgi_busy_buffers_size 32k;
    fastcgi_intercept_errors on;

    fastcgi_request_buffering off;

    # We timeout after 30s if the application cannot start processing the request.
    fastcgi_connect_timeout 30s;
    # Once the application started processing pass timeout responsibility to upstream.
    fastcgi_read_timeout 14400s;
    fastcgi_send_timeout 14400s;
    fastcgi_index index.php;
    ## Hide the Drupal 7 header X-Generator.
    fastcgi_hide_header 'X-Generator';
    ## Hide the PHP X-Powered-By header.
    fastcgi_hide_header 'X-Powered-By';

    # Mitigate HTTPoxy
    # https://httpoxy.org/
    fastcgi_param HTTP_PROXY "";

    upstream php {
        server localhost:9000;
    }

    map $http_x_forwarded_proto $fastcgi_https {
        default $https;
        http '';
        https on;
    }

    server {
        server_name drupal;
        listen 8080;

        root /app/web;
        index index.php;
        satisfy any;
        allow 127.0.0.1;
        allow 10.0.0.0/8;
        deny all;

        auth_basic "Restricted";
        auth_basic_user_file /opt/bitnami/nginx/conf/.htaccess;

        # Custom configuration gets included here


    location = /favicon.ico {
        log_not_found off;
        access_log off;
    }

    location = /robots.txt {
        allow all;
        log_not_found off;
        access_log off;
    }

    # Very rarely should these ever be accessed outside of your lan
    location ~* \.(txt|log)$ {
        allow 192.168.0.0/16;
        deny all;
    }

    location ~ \..*/.*\.php$ {
        return 403;
    }

    location ~ ^/sites/.*/private/ {
        return 403;
    }

    # Block access to scripts in site files directory
    location ~ ^/sites/[^/]+/files/.*\.php$ {
        deny all;
    }

    # Allow "Well-Known URIs" as per RFC 5785
    location ~* ^/.well-known/ {
        allow all;
    }

    # Block access to "hidden" files and directories whose names begin with a
    # period. This includes directories used by version control systems such
    # as Subversion or Git to store control files.
    location ~ (^|/)\. {
        return 403;
    }

    location / {
        # try_files $uri @rewrite; # For Drupal <= 6
        try_files $uri /index.php?$query_string; # For Drupal >= 7
    }

    location @rewrite {
        rewrite ^/(.*)$ /index.php?q=$1;
    }

    # Don't allow direct access to PHP files in the vendor directory.
    location ~ /vendor/.*\.php$ {
        deny all;
        return 404;
    }

    # In Drupal 8, we must also match new paths where the '.php' appears in
    # the middle, such as update.php/selection. The rule we use is strict,
    # and only allows this pattern with the update.php front controller.
    # This allows legacy path aliases in the form of
    # blog/index.php/legacy-path to continue to route to Drupal nodes. If
    # you do not have any paths like that, then you might prefer to use a
    # laxer rule, such as:
    #   location ~ \.php(/|$) {
    # The laxer rule will continue to work if Drupal uses this new URL
    # pattern with front controllers other than update.php in a future
    # release.
    location ~ '\.php$|^/update.php' {
        fastcgi_split_path_info ^(.+?\.php)(|/.*)$;
        # Security note: If you're running a version of PHP older than the
        # latest 5.3, you should have "cgi.fix_pathinfo = 0;" in php.ini.
        # See http://serverfault.com/q/627903/94922 for details.
        # include fastcgi_params;
        # Block httpoxy attacks. See https://httpoxy.org/.
        fastcgi_param HTTP_PROXY "";
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_param PATH_INFO $fastcgi_path_info;
        fastcgi_param QUERY_STRING $query_string;
        fastcgi_intercept_errors on;
        fastcgi_pass 127.0.0.1:9000;
        fastcgi_read_timeout 300;
    }

    # Fighting with Styles? This little gem is amazing.
    # location ~ ^/sites/.*/files/imagecache/ { # For Drupal <= 6
    location ~ ^/sites/.*/files/styles/ { # For Drupal >= 7
        try_files $uri @rewrite;
    }

    # Handle private files through Drupal. Private file's path can come
    # with a language prefix.
    location ~ ^(/[a-z\-]+)?/system/files/ { # For Drupal >= 7
        try_files $uri /index.php?$query_string;
    }

    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg)$ {
        try_files $uri @rewrite;
        expires max;
        log_not_found off;
    }

    }
